<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>钻研知识 on Kane</title>
    <link>https://charmerkai.github.io/tags/%E9%92%BB%E7%A0%94%E7%9F%A5%E8%AF%86/</link>
    <description>Recent content in 钻研知识 on Kane</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Thu, 12 Jul 2018 10:29:25 +0800</lastBuildDate><atom:link href="https://charmerkai.github.io/tags/%E9%92%BB%E7%A0%94%E7%9F%A5%E8%AF%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>为什么偏偏是-404-not-found</title>
      <link>https://charmerkai.github.io/posts/2018-07/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%81%8F%E5%81%8F%E6%98%AF-404-not-found/</link>
      <pubDate>Thu, 12 Jul 2018 10:29:25 +0800</pubDate>
      
      <guid>https://charmerkai.github.io/posts/2018-07/%E4%B8%BA%E4%BB%80%E4%B9%88%E5%81%8F%E5%81%8F%E6%98%AF-404-not-found/</guid>
      <description>在浏览网页的过程中，所有人都常见过的页面莫过于404 not found了，可是你有没有想过，为什么偏偏是404呢。为什么不是110,911（笑），在辗转反侧很久之后，我最终偶然的发现了这个网络传输中的标准
首先我们从万维网联盟讲起
 万维网，world wide web，最早是在1994年由欧洲核子研究组织发展的，欧洲人为了更好地与麻省理工学院协同工作而发展的一种传输工具，也就是我们现在使用的各种网址来浏览来自世界各地的各种信息，随后为了致力于让所有背景，身体状况的人都能对web加以利用，W3C联盟被建立并对这一领域实施标准化，这一联盟十分重要，因此包括了软件开发商、内容提供商、企业用户、通信公司、研究机构、研究实验室、标准化团体以及政府等各种角色，其中有很多我们熟悉的，IBM、Microsoft、Apple、Adobe等。
 Http协议，（HyperText Transfer Protocol，超文本传输协议）是因特网上应用最为广泛的一种网络传输协议，是由W3C推荐并实施的一个标准，这个协议起作用于我们浏览网页的加载过程中，也就是我们在每次浏览网页输入网址后，由浏览器根据URL发出一个请求，当然格式会遵循协议的要求，这个请求被传到web服务器上，一般都是Apache，随后服务器又会根据这个协议来传回一些我们需要的HTML或图片的文件来显示在我们电脑屏幕上。
而在浏览器接收并显示网页前，此网页所在的服务器会返回一个包含HTTP状态码的信息头（server header）用以响应浏览器的请求，这就是所谓的HTTP状态码（HTTP Status Code）
HTTP状态码由三个十进制数字组成，第一个十进制数字定义了状态码的类型，后两个数字没有分类的作用。HTTP状态码共分为5种类型：
五种分类下衍生出41种具体的状态码，这之中就有我们常见的
 200 - 请求成功 301 - 资源（网页等）被永久转移到其它URL 404 - 请求的资源（网页等）不存在 500 - 内部服务器错误  值得一提的是通过404这个代码，网站设计人员还可设置&amp;quot;您所请求的资源无法找到&amp;quot;的个性页面，这就是我们常看到404界面各有千秋的原因，都是可（ku）爱（bi）的设计人员为了驱逐我们没找到网页的坏心情啦。
所有的41个状态码可以参考这里
W3C参考这里</description>
    </item>
    
    <item>
      <title>每天都在用的Windows触摸板，你真的了解他么</title>
      <link>https://charmerkai.github.io/posts/2018-04/%E6%AF%8F%E5%A4%A9%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84windows%E8%A7%A6%E6%91%B8%E6%9D%BF%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3%E5%AE%83%E4%B9%88/</link>
      <pubDate>Thu, 26 Apr 2018 09:25:37 +0800</pubDate>
      
      <guid>https://charmerkai.github.io/posts/2018-04/%E6%AF%8F%E5%A4%A9%E9%83%BD%E5%9C%A8%E7%94%A8%E7%9A%84windows%E8%A7%A6%E6%91%B8%E6%9D%BF%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BA%86%E8%A7%A3%E5%AE%83%E4%B9%88/</guid>
      <description>作为一个喜欢探索新东西的人，例如对于Windows触摸板双指翻页，三指切换的操作的探索，让我在使用笔记本时效率大增。使用多了，就满脑子想着还有什么新的骚操作，去Microsoft搜了下，发现自己还是太年轻，竟有这么多常用的手势没有被发现，遂整理如下：
单指 点击：鼠标左键
轻扫：鼠标移动
双指 点击：鼠标右键
轻扫：界面水平或垂直翻页
缩放：缩小放大
三指 点击：召唤Cortana
左右轻扫：切换应用
向上轻扫：多任务视图
向下轻扫：显示桌面
四指 点击：打开右侧通知界面
左右轻扫：切换桌面
向上轻扫：多任务视图
向下轻扫：显示桌面
 其中的切换桌面要求至少有两个桌面，新建桌面的按钮在多任务视图的右下角。
Cortana当然就是Windows自带的人工智能了，很多搜索，操作通过她来执行还是很方便的。
这些所有操作在Windows设置里也可以找到，选择“开始” 按钮，然后依次选择“设置” &amp;gt;“设备” &amp;gt;“鼠标和触模板”。其中三指与四指还可以根据用户喜好自定义，更有更改音频音量，鼠标中键以及播放/暂停的功能等你使用。
 当然，Windows自带的手势设置只出现在Windows10中，如果你的系统未升级或者想体验更多的自定义手势，可以在查看本机触摸板厂商后下载对应驱动，安装后就可以尽情设置啦。
参考：Microsoft help</description>
    </item>
    
    <item>
      <title>hexo的图标配置</title>
      <link>https://charmerkai.github.io/posts/2018-01/hexo%E7%9A%84%E5%9B%BE%E6%A0%87%E9%85%8D%E7%BD%AE/</link>
      <pubDate>Tue, 30 Jan 2018 20:31:20 +0800</pubDate>
      
      <guid>https://charmerkai.github.io/posts/2018-01/hexo%E7%9A%84%E5%9B%BE%E6%A0%87%E9%85%8D%E7%BD%AE/</guid>
      <description>在hexo的主题优化中，我碰到了许多问题，印象最深的是界面中小图标的配置，没有具体的教程，只能自行摸索，故将整个过程记录下来，供需要的人参考。 当然，全文基于小白视角，前端大佬可以忽略这篇文章。
 ·1寻找图标 由于我需要更改的是author个人信息的链接图标，所以打开layout/partial中的author.ejs，发现有这么几行代码
if(item.name == &amp;#39;weibo&amp;#39;) &amp;lt;i class=&amp;#34;iconfont icon-weibo&amp;#34;&amp;gt;&amp;lt;/i&amp;gt; 很明显，信息中weibo的图标是从这个iconfont中生成的，搜索 iconfont 发现是阿里旗下的一个图标素材库，但是素材需要添加购物车登陆下载，像我这么懒的人就不想再去申个账号，又搜索图标配置，发现了另一个国外的网站，Font Awesome，这是一个源码在Github上的开源项目，提供绝大多数免费的icon供网页等应用。
·2配置文件 在Font Awesome的官网点击下载，解压后会有这么四个文件夹
github
我们当然选择的是web-fonts-with-css，点进去后，需要用到的就是css的样式配置文件和webfont的资源文件，注意到主题source目录下存在css目录，所以将所有css文件拷贝到这里，再将webfont整个文件夹放到source下。
接下来进行css文件的配置，注意到css文件总共有五种组合， 在你的layout/_partial/head.ejs中添加如下代码
&amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;&amp;lt;%- url_for(&amp;#39;/fa-brands/css/fa-brands.min.css&amp;#39;) %&amp;gt;&amp;#34;&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;&amp;lt;%- url_for(&amp;#39;/fa-regular/css/fa-regular.min.css&amp;#39;) %&amp;gt;&amp;#34;&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;&amp;lt;%- url_for(&amp;#39;/fa-solid/css/fa-solid.min.css&amp;#39;) %&amp;gt;&amp;#34;&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;&amp;lt;%- url_for(&amp;#39;/fontawesome/css/fontawesome.min.css&amp;#39;) %&amp;gt;&amp;#34;&amp;gt; &amp;lt;link rel=&amp;#34;stylesheet&amp;#34; href=&amp;#34;&amp;lt;%- url_for(&amp;#39;/fontawesome-all/css/fontawesome-all.css&amp;#39;) %&amp;gt;&amp;#34;&amp;gt; 再根据官网的使用说明，添加
&amp;lt;link href=&amp;#34;https://use.fontawesome.com/releases/v5.0.4/css/all.css&amp;#34; rel=&amp;#34;stylesheet&amp;#34;&amp;gt; 至此，我们就完成了配置。
·3使用图标 参考官网的说明， 如上图，在你需要使用或替换图标的位置使用
&amp;lt;i class=&amp;#34;fas fa-camera-retro&amp;#34;&amp;gt;&amp;lt;/i&amp;gt; 即可，这是一个相机图标的示例。 每个图标的指代（fa-camera-retro）可以在官网搜索你需要的图标后查找到。 由于我替换的是blog作者界面的链接图标，故在author.ejs中修改代码
&amp;lt;%} if(item.name == &amp;#39;instagram&amp;#39;) {%&amp;gt; &amp;lt;i class=&amp;#34;fab fa-instagram&amp;#34;&amp;gt;&amp;lt;/i&amp;gt; 这样就可以放上我的ins链接啦。</description>
    </item>
    
  </channel>
</rss>
